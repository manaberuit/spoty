#
# Document: https://circleci.com/docs/2.0/
#
version: 2
jobs:
  generate_cache:
    machine: true
    steps:
      - checkout
      - run:
          name: makekey
          command: sh api/makekey.sh
      - restore_cache:
          key: docker-{{ checksum ".circleci/config.yml" }}-{{ checksum "docker-compose.test.yml" }}-{{ checksum "api/Dockerfile" }}-{{ checksum "front/Dockerfile" }}
          paths: ~/caches/images.tar
      - run:
          name: Check cache file, if not exists then pull images and generate cache.
          command: |
            if [ ! -f ~/caches/images.tar ]; then
              docker-compose -f docker-compose.test.yml pull
              docker-compose -f docker-compose.test.yml build
              mkdir -p ~/caches
              docker save $(docker images | awk 'NR>=2 && ! /^<none>/{print $1}') -o ~/caches/images.tar
            fi
      - save_cache:
          key: docker-{{ checksum ".circleci/config.yml" }}-{{ checksum "docker-compose.test.yml" }}-{{ checksum "api/Dockerfile" }}-{{ checksum "front/Dockerfile" }}
          paths: ~/caches/images.tar
      - run:
          name: finish cacheing
          command: echo "finish cache"

  build:
    machine: true
    steps:
      - checkout
      - run:
          name: makekey
          command: sh api/makekey.sh
      - run:
          name: Build Docker Image
          command: docker-compose -f docker-compose.test.yml build
      - run:
            name: docker-compose up
            command: |
                 docker-compose -f docker-compose.test.yml up -d
      - run:
            name: finish build
            command: echo "finish build"

  deploy-dev:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "f2:9a:7e:da:b6:c2:38:f2:4a:73:b4:a8:f4:e9:7d:2c"
      - run:
          name: Start ssh-keyscan
          command: |
            ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST "cd /var/mate && sudo git pull origin master && sudo docker-compose build --no-cache && sudo docker-compose up -d && sudo aglio -i docs/api.md -o /var/www/html/index.html"
      - run:
          name: Exit from SSH
          command: exit
      - run:
          name: finish deploy
          command: echo "finish deploy"

  deploy-prod:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "66:34:4c:98:04:71:f0:ba:8b:eb:74:07:e1:e5:3a:d4"
      - run:
          name: Start ssh-keyscan
          command: |
            ssh-keyscan $SSH_HOST_PROD >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            ssh $SSH_USER@$SSH_HOST_PROD "cd /var/mate && sudo git pull origin master && sudo docker-compose build --no-cache && sudo docker-compose up -d"
      - run:
          name: Exit from SSH
          command: exit
      - run:
          name: finish deploy
          command: echo "finish deploy"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - generate_cache
      - build:
          requires:
            - generate_cache
      - deploy-dev:
          filters:
            branches:
              only: dev
          requires:
            - build
      - deploy-prod:
          filters:
            branches:
              only: master
          requires:
            - build
